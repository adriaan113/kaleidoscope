//TO DO:
//MAKE ALL THIS BEM
//CANVAS??


//VARIABLES//

$base-color: rgb(21, 21, 21);
$first-color: rgb(29, 210, 198);
$second-color: rgb(208, 208, 23);
$third-color: rgb(221, 26, 120);



//mixin in een mixin? om alle  mixins samen te voegen?

//MIXINS//
 
@mixin li-style-1($end) {
    @for $i from 1 through $end {
        &:nth-child(#{$i}) {
            //background-image: linear-gradient(rgb(random(255) * random(10),random(255) * random(10),random(255) * random(10)),rgb(random(255) * random(10),random(255) * random(10),random(255) * random(10)));
            background-image: linear-gradient($first-color * $i,complement($first-color) * $i);
        }
    }
} 

@mixin li-style-2($end) {
    @for $i from 1 through $end {
        &:nth-child(#{$i}) {
        //background-color: rgb(random(255) * $i,random(255) * $i,random(255) * $i);
        //background-image: linear-gradient(rgb(random(255) * random(10),random(255) * random(10),random(255) * random(10)),rgb(random(255) * random(10),random(255) * random(10),random(255) * random(10)));
        background-image: linear-gradient($second-color * $i,complement($second-color) * $i);
        }
    } 
}

@mixin li-style-3($end) {
    @for $i from 1 through $end {
        &:nth-child(#{$i}) {
        //background-image: linear-gradient(rgb(random(255) * random(10),random(255) * random(10),random(255) * random(10)),rgb(random(255) * random(10),random(255) * random(10),random(255) * random(10)));
        background-image: linear-gradient($third-color * $i,complement($third-color) * $i);
        }
    }
} 

@mixin inner-order($end) {
    @for $i from 1 through $end {
        &:nth-child(#{$i}) {
            order: random(5);
        }
    }
} 

@mixin color($color1) {
    background-color: complement($color1); //gerbuik ik nergens
}

@mixin random-color{
    background-color: rgb(random(255),random(255),random(255));
}

@mixin opacity{
    opacity: random();
}


@mixin gridlines-border-thickness($start, $end, $side, $multiply-square:1, $add-square:0) {
    &:nth-child(#{1}){
        border-left-width: 2px;  
    }
    @for $i from $start through $end {
        &:nth-child(#{($i * $multiply-square) + $add-square}) {
            border-#{$side}-width: 2px;
        } 
    } 
}

//BASE STYLES//

*{
    box-sizing: border-box;
}

html,
body{
    margin: 0;
    padding: 0;
}

body{
    background-color: $base-color;
    width: 100%;
    height: 100vh;
}

//KALADOSCOPE LAYER STYLES//
.wrapper{
    //position: relative;
    height: 100vh;
    .kalei-container{
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        position: relative;
        .layer-main,
        .layer-1{
            position: absolute;
            list-style: none;
            padding: 0;
            width: calc(100% - 20px);
            display: grid;
            justify-items: center;
            grid-template-columns: repeat(3, 1fr);
            grid-template-rows: repeat(2,1fr);
            height: 100%;
            //gap: 4px;
            li{
                //background-color: $base-color;
                width: 100%;
                //aspect-ratio: 1/1;
                @include li-style-1(6);
            }
        }
        .layer-1{
            li{
                display: flex;
                justify-content: center;
                align-items: center;
                // @include inner-order(6);
                .inner-layer-1{
                    position: absolute;
                    list-style: none;
                    padding: 0;
                    width: calc(100% - 20px);
                    display: grid;
                    justify-items: center;
                    grid-template-columns: repeat(2, 1fr);
                    grid-template-rows: repeat(2,1fr);
                    width: 30%;
                    height: 50vh;
                    justify-items: center;
                    //align-items: center;
                    li{
                        //@include inner-order(4);
                        opacity: .6;
                        //@include opacity;
                        clip-path: polygon(50% 0%, 61% 35%, 98% 35%, 68% 57%, 79% 91%, 50% 70%, 21% 91%, 32% 57%, 2% 35%, 39% 35%);
                        @include li-style-1(4);
                        width: 40%;
                        height: 40%;
                        padding: 3rem;
                        &:nth-child(1){
                            align-self: flex-start;
                        }
                        &:nth-child(2){
                            align-self: flex-start;
                        }
                        &:nth-child(3){
                            align-self: flex-end;
                        }
                        &:nth-child(4){
                            align-self: flex-end;
                        }
                    }
                }
            }
        }
        .layer-2{
            li{
                clip-path:polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
                @include li-style-2(6);
                display: flex;
                justify-content: center;
                align-items: center;
                opacity: .8;
                //@include opacity;
                .inner-layer-2{
                    position: absolute;
                    list-style: none;
                    padding: 0;
                    width: calc(100% - 20px);
                    display: grid;
                    justify-items: center;
                    grid-template-columns: repeat(2, 1fr);
                    grid-template-rows: repeat(2,1fr);
                    width: 30%;
                    height: 50vh;
                    li{
                        background-color: $third-color;
                        opacity: .8;
                        //@include opacity;
                        padding: .5rem;
                        clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
                        @include li-style-3(4);
                        @include inner-order(4);
                    }  
                }
            }
        }
        .layer-3{
            li{
                clip-path:ellipse(25% 40% at 50% 50%);
                position: relative;
                @include li-style-3(6);
                display: flex;
                justify-content: center;
                align-items: center;
                opacity: .7;
                //@include opacity;
                .inner-layer-3{
                    position: absolute;
                    list-style: none;
                    padding: 0;
                    width: calc(100% - 20px);
                    display: grid;
                    justify-items: center;
                    grid-template-columns: repeat(2, 1fr);
                    grid-template-rows: repeat(2,1fr);
                    width: 60%; 
                    height: 50vh;
                    li{
                        //background-color: $primary-color;
                        opacity: .6;
                        //@include opacity;
                        padding: .5rem;
                        clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
                        @include li-style-2(4);
                        //@include inner-order(4);
                        width: 100%;
                        height: 30%;
                        &:nth-child(1){
                            align-self: flex-end;
                            margin-bottom: 2rem;
                        }
                        &:nth-child(2){
                            align-self: flex-end;
                            margin-bottom: 2rem;
                        }
                        &:nth-child(3){
                            align-self: flex-start;
                            margin-top: 2rem;
                        }
                        &:nth-child(4){
                            align-self: flex-start;
                            margin-top: 2rem;
                        }
                    }
                }
            }
        }
        .gridlines{
            position: absolute;
            display: grid;
            grid-template-columns: repeat(5,1fr);
            grid-template-rows: repeat(3, 1fr);
            list-style: none;
            padding: 1rem;
            width: 100%;  
            height: 70%;
            li{
                background-color: transparent;
                border-width: 1px;
                border-style: solid;
                border-color: $base-color;
                // border-image-slice: 10%;
                // border-image-source: linear-gradient(blue, pink);
                //aspect-ratio: 1/1;
                position: relative;
                @include gridlines-border-thickness(1,5,top);
                @include gridlines-border-thickness(21,25,bottom);
                @include gridlines-border-thickness(1,21,left,5,1);
                @include gridlines-border-thickness(1,20,right,5);
                .inner-grid{
                    position: absolute;
                    display: grid;
                    grid-template-columns: repeat(3,1fr);
                    grid-template-rows: repeat(3, 1fr);
                    list-style: none;
                    padding: 0;
                    width: 100%; 
                    transform: rotate(45deg);
                    li{
                        background-color: transparent;
                        border-width: 1px;
                        border-style: solid;
                        border-color: $base-color;
                        aspect-ratio: 1/1;
                    }
                }
            }
        }
    }
}